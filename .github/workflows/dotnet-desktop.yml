name: Build and Release x64

on:
  release:
    types: [published]

jobs:
  build-and-release:
    runs-on: windows-latest
    env:
      BUILD_PLATFORM: x64
      BUILD_CONFIG: Release
      SOLUTION_PATH: AdbTools.sln
      MAIN_PROJECT_PATH: AdbTools\AdbTools.csproj
      UPDATE_PROJECT_PATH: Update\Update.csproj

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1

    - name: Build solution
      run: |
        Write-Output "🚀 Building solution..."
        
        # 构建主项目（明确指定输出路径）
        msbuild $env:MAIN_PROJECT_PATH `
          /p:Configuration=$env:BUILD_CONFIG `
          /p:Platform=$env:BUILD_PLATFORM `
          /p:PlatformTarget=x64 `
          /p:OutputPath=bin\x64\Release\ `
          /v:minimal `
          /nologo
        
        # 构建Update项目（明确指定输出路径）
        msbuild $env:UPDATE_PROJECT_PATH `
          /p:Configuration=$env:BUILD_CONFIG `
          /p:Platform=$env:BUILD_PLATFORM `
          /p:PlatformTarget=x64 `
          /p:OutputPath=bin\x64\Release\ `
          /v:minimal `
          /nologo
        
        # 检查主程序输出
        $mainExePath = "AdbTools\bin\x64\Release\AdbTools.exe"
        if (-not (Test-Path $mainExePath)) {
            Write-Error "❌ AdbTools.exe not found at $mainExePath"
            Write-Output "##[group]Directory structure"
            Get-ChildItem -Recurse
            Write-Output "##[endgroup]"
            exit 1
        }
        
        Write-Output "✅ Build successful!"
      shell: pwsh

    - name: Prepare artifacts
      run: |
        Write-Output "📦 Preparing artifacts..."
        
        # 创建干净的artifacts目录
        if (Test-Path "artifacts") { Remove-Item -Path "artifacts" -Recurse -Force }
        New-Item -ItemType Directory -Path "artifacts" | Out-Null
        
        # 复制主程序文件
        $sourceDir = "AdbTools\bin\x64\Release"
        if (-not (Test-Path $sourceDir)) {
            Write-Error "❌ Source directory not found: $sourceDir"
            exit 1
        }
        
        Copy-Item -Path "$sourceDir\*" -Destination "artifacts" -Recurse -Force
        
        # 清理不需要的文件
        Remove-Item -Path "artifacts\*.pdb", "artifacts\*.xml", "artifacts\*.vshost.*" -ErrorAction SilentlyContinue
        
        # 验证主程序
        if (-not (Test-Path "artifacts\AdbTools.exe")) {
            Write-Error "❌ AdbTools.exe not found in artifacts"
            Get-ChildItem -Path "artifacts"
            exit 1
        }
        
        Write-Output "✔️ Artifacts prepared"
      shell: pwsh

    - name: Create update package
      run: |
        Write-Output "🗜 Creating update.zip..."
        Compress-Archive -Path "artifacts\AdbTools.exe" -DestinationPath "artifacts\update.zip"
        Write-Output "✔️ Update package created"
      shell: pwsh

    - name: Create full release package
      run: |
        Write-Output "🗜 Creating full release package..."
        Get-ChildItem -Path "artifacts\" -Exclude "*.zip" | 
          Compress-Archive -DestinationPath "artifacts\AdbTools.zip" -Force
        Write-Output "✔️ Full release package created"
      shell: pwsh

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifacts/update.zip
        asset_name: update.zip
        asset_content_type: application/zip

    - name: Upload Full Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./artifacts/AdbTools.zip
        asset_name: AdbTools.zip
        asset_content_type: application/zip
